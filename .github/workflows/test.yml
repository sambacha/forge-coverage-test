name: test

on:
  push:

env:
  FOUNDRY_PROFILE: ci
  GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
  GIT_USER: ${{ secrets.GIT_USER }}
  ORG_NAME: ${{ secrets.ORG_NAME }}
  PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
  COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
  PULL_NUMBER: ${{ github.event.pull_request.number }}
  RUN_ID: ${{ github.run_id }}
  
jobs:
  check:
    strategy:
      fail-fast: true

    name: Foundry project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Run Forge build
        run: |
          forge --version
          forge build --sizes
        id: build

      - name: Run Forge tests
        run: |
          forge test -vvvv -j > results.json
          forge test -l
        id: test

      - name: Run analysis
        id: analysis
        shell: bash
         forge test --gas-report >>.github/artifacts/gascoverage_report.txt 2>&1 || true
         echo ::set-output name=GAS_COVERAGE::

      - name: Compare gas reports
        uses: Rubilmax/foundry-gas-diff@v3.7
        with:
          workflowId: foundry-gas-diff.yml # must be the name of the workflow file
          ignore: test/**/* # optionally filter out gas reports from specific paths
        id: gas_diff

      - name: Archive code coverage results
        uses: actions/upload-artifact@v2
        id: artifact
        with:
          name: gas-report
          path: .github/artifacts/gascoverage_report.txt

      - name: Add gas diff to sticky comment
        if: github.event_name == 'pull_request' || github.event_name == 'pull_request_target'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          delete: ${{ !steps.gas_diff.outputs.markdown }} # delete the comment in case changes no longer impacts gas costs
          message: ${{ steps.gas_diff.outputs.markdown }}
          
      - name: Coverage
        run: |
          forge coverage --report lcov
        id: coverage

      - name: Coverage
        run: |
          forge coverage --report debug
        id: debug
        
      - name: Create code coverage status for the current commit
        run: |
          curl "https://{GIT_USER}:${GIT_TOKEN}@api.github.com/repos/${ORG_NAME}/${PROJECT_NAME}/statuses/${COMMIT_SHA}" -d "{\"state\": \"pending\",\"target_url\": \"https://github.com/${ORG_NAME}/${PROJECT_NAME}/pull/${PULL_NUMBER}/checks?check_run_id=${RUN_ID}\",\"description\": \"in progress â€” This check has started... \",\"context\": \"code cov\"}"
        env:
          GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
          GIT_USER: ${{ secrets.GIT_USER }}
          ORG_NAME: ${{ secrets.ORG_NAME }}
          PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
          COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
          RUN_ID: ${{ github.run_id }}
          PULL_NUMBER: ${{ github.event.pull_request.number }}     
          
      - uses: codecov/codecov-action@v2
      
   
        
